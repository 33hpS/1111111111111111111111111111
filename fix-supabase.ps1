# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫ MIME type –≤ SupabaseDebug
# –ó–∞–ø—É—Å–∫: .\fix-supabase.ps1

param(
    [switch]$Force = $false
)

function Write-Info { 
    param($Message)
    Write-Host "‚ÑπÔ∏è  $Message" -ForegroundColor Blue 
}

function Write-Success { 
    param($Message)
    Write-Host "‚úÖ $Message" -ForegroundColor Green 
}

function Write-Warning { 
    param($Message)
    Write-Host "‚ö†Ô∏è  $Message" -ForegroundColor Yellow 
}

function Write-Error { 
    param($Message)
    Write-Host "‚ùå $Message" -ForegroundColor Red 
}

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
Write-Host ""
Write-Host "üîß WASSER PRO - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ MIME type" -ForegroundColor Cyan
Write-Host "===============================================" -ForegroundColor Cyan
Write-Host ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
if (-Not (Test-Path "package.json")) {
    Write-Error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞ (–≥–¥–µ –µ—Å—Ç—å package.json)"
    Write-Host "   –¢–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞: $PWD" -ForegroundColor Gray
    exit 1
}

Write-Info "üìç –ù–∞–π–¥–µ–Ω package.json –≤: $PWD"

# –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
if (-Not $Force) {
    $response = Read-Host "ü§î –ò—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏ MIME type –≤ SupabaseDebug? (y/N)"
    if ($response -ne "y" -and $response -ne "Y") {
        Write-Error "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
        exit 0
    }
}

try {
    Write-Info "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ..."

    # 1. –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é public/supabase
    Write-Info "üìÅ –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫..."
    New-Item -ItemType Directory -Path "public\supabase" -Force | Out-Null

    # 2. –°–æ–∑–¥–∞–µ–º artifact_unified.sql —Ñ–∞–π–ª
    Write-Info "üìÑ –°–æ–∑–¥–∞–µ–º SQL –∞—Ä—Ç–µ—Ñ–∞–∫—Ç..."
    
    $sqlContent = @'
-- WASSER PRO - Unified Supabase Schema
-- –ü–æ–ª–Ω–∞—è —Å—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏

-- 1. –¢–∞–±–ª–∏—Ü–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
CREATE TABLE IF NOT EXISTS materials (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  name TEXT NOT NULL,
  article TEXT,
  unit TEXT DEFAULT '—à—Ç',
  price DECIMAL(10,2) DEFAULT 0,
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- 2. –¢–∏–ø—ã –∏–∑–¥–µ–ª–∏–π  
CREATE TABLE IF NOT EXISTS product_types (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  name TEXT NOT NULL,
  markup DECIMAL(5,2) DEFAULT 0,
  work_cost DECIMAL(10,2) DEFAULT 0,
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- 3. –¢–∏–ø—ã –æ—Ç–¥–µ–ª–∫–∏
CREATE TABLE IF NOT EXISTS finish_types (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  name TEXT NOT NULL,
  markup DECIMAL(5,2) DEFAULT 0,
  work_cost DECIMAL(10,2) DEFAULT 0,
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- 4. –ö–æ–ª–ª–µ–∫—Ü–∏–∏
CREATE TABLE IF NOT EXISTS collections (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  name TEXT NOT NULL,
  description TEXT,
  group_name TEXT,
  is_archived BOOLEAN DEFAULT FALSE,
  pinned BOOLEAN DEFAULT FALSE,
  cover_url TEXT,
  product_order JSONB DEFAULT '[]',
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- 5. –ò–∑–¥–µ–ª–∏—è
CREATE TABLE IF NOT EXISTS products (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  name TEXT NOT NULL,
  article TEXT,
  image_url TEXT,
  collection_id UUID REFERENCES collections(id),
  product_type_id UUID REFERENCES product_types(id),
  finish_type_id UUID REFERENCES finish_types(id),
  tech_card JSONB DEFAULT '[]',
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- 6. –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
CREATE INDEX IF NOT EXISTS idx_materials_article ON materials(article);
CREATE INDEX IF NOT EXISTS idx_materials_name ON materials(name);
CREATE INDEX IF NOT EXISTS idx_products_article ON products(article);
CREATE INDEX IF NOT EXISTS idx_products_collection ON products(collection_id);
CREATE INDEX IF NOT EXISTS idx_collections_group ON collections(group_name);

-- 7. RLS (Row Level Security) –ø–æ–ª–∏—Ç–∏–∫–∏
ALTER TABLE materials ENABLE ROW LEVEL SECURITY;
ALTER TABLE product_types ENABLE ROW LEVEL SECURITY;
ALTER TABLE finish_types ENABLE ROW LEVEL SECURITY;
ALTER TABLE collections ENABLE ROW LEVEL SECURITY;
ALTER TABLE products ENABLE ROW LEVEL SECURITY;

-- –†–∞–∑—Ä–µ—à–∏—Ç—å –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
CREATE POLICY IF NOT EXISTS "Allow all for authenticated users" ON materials
  FOR ALL USING (auth.role() = 'authenticated');

CREATE POLICY IF NOT EXISTS "Allow all for authenticated users" ON product_types
  FOR ALL USING (auth.role() = 'authenticated');

CREATE POLICY IF NOT EXISTS "Allow all for authenticated users" ON finish_types
  FOR ALL USING (auth.role() = 'authenticated');

CREATE POLICY IF NOT EXISTS "Allow all for authenticated users" ON collections
  FOR ALL USING (auth.role() = 'authenticated');

CREATE POLICY IF NOT EXISTS "Allow all for authenticated users" ON products
  FOR ALL USING (auth.role() = 'authenticated');

-- 8. View –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å —Ä–∞—Å—á–µ—Ç–∞–º–∏
CREATE OR REPLACE VIEW v_products_export AS
SELECT 
  p.id,
  p.name,
  p.article,
  p.image_url,
  c.name as collection_name,
  pt.name as product_type_name,
  ft.name as finish_type_name,
  p.tech_card,
  p.created_at,
  p.updated_at,
  -- –†–∞—Å—á–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã—Ö –∑–∞—Ç—Ä–∞—Ç
  (
    SELECT COALESCE(SUM(
      (tc_item->>'quantity')::numeric * COALESCE(m.price, 0)
    ), 0)
    FROM jsonb_array_elements(p.tech_card) AS tc_item
    LEFT JOIN materials m ON m.id::text = tc_item->>'materialId'
  ) as material_cost,
  -- –°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–±–æ—Ç
  COALESCE(pt.work_cost, 0) as work_cost,
  -- –ù–∞—Ü–µ–Ω–∫–∞ —Ç–∏–ø–∞ –∏–∑–¥–µ–ª–∏—è
  COALESCE(pt.markup, 0) as product_markup,
  -- –ù–∞—Ü–µ–Ω–∫–∞ –æ—Ç–¥–µ–ª–∫–∏
  COALESCE(ft.markup, 0) as finish_markup
FROM products p
LEFT JOIN collections c ON p.collection_id = c.id
LEFT JOIN product_types pt ON p.product_type_id = pt.id
LEFT JOIN finish_types ft ON p.finish_type_id = ft.id;

-- 9. –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ language 'plpgsql';

-- –¢—Ä–∏–≥–≥–µ—Ä—ã –¥–ª—è –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
CREATE TRIGGER update_materials_updated_at BEFORE UPDATE ON materials
  FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_product_types_updated_at BEFORE UPDATE ON product_types
  FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_finish_types_updated_at BEFORE UPDATE ON finish_types
  FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_collections_updated_at BEFORE UPDATE ON collections
  FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_products_updated_at BEFORE UPDATE ON products
  FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- 10. –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
INSERT INTO materials (name, article, unit, price) VALUES
  ('–õ–î–°–ü 18–º–º –ë–µ–ª—ã–π', 'LDSP-18-W', '–º¬≤', 850.00),
  ('–ö—Ä–æ–º–∫–∞ –ü–í–• 2–º–º', 'EDGE-2-PVC', '–ø–æ–≥.–º', 35.00),
  ('–ü–µ—Ç–ª—è clip-on', 'HINGE-CLIP', '—à—Ç', 120.00)
ON CONFLICT DO NOTHING;

INSERT INTO product_types (name, markup, work_cost) VALUES
  ('–¢—É–º–±–∞ —Å –¥–≤–µ—Ä—è–º–∏', 10.00, 1000.00),
  ('–¢—É–º–±–∞ —Å —è—â–∏–∫–∞–º–∏', 15.00, 1500.00),
  ('–ü–µ–Ω–∞–ª', 20.00, 2000.00)
ON CONFLICT DO NOTHING;

INSERT INTO finish_types (name, markup) VALUES
  ('–ö—Ä–∞—à–µ–Ω—ã–π', 50.00),
  ('–ü–ª–µ–Ω–æ—á–Ω—ã–π', 30.00)
ON CONFLICT DO NOTHING;

-- –ì–æ—Ç–æ–≤–æ!
COMMENT ON SCHEMA public IS 'WASSER PRO - Schema version 1.0';
'@

    $sqlContent | Out-File -FilePath "public\supabase\artifact_unified.sql" -Encoding UTF8
    Write-Success "–°–æ–∑–¥–∞–Ω public\supabase\artifact_unified.sql"

    # 3. –°–æ–∑–¥–∞–µ–º _headers —Ñ–∞–π–ª –¥–ª—è Cloudflare Pages
    Write-Info "üåê –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –¥–ª—è Cloudflare Pages..."
    
    $headersContent = @'
# Cloudflare Pages Headers –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö MIME types

/supabase/*.sql
  Content-Type: text/plain; charset=utf-8
  Cache-Control: no-cache

/*.sql
  Content-Type: text/plain; charset=utf-8
  Cache-Control: no-cache

# CSS –∏ JS —Ñ–∞–π–ª—ã
/*.css
  Content-Type: text/css; charset=utf-8

/*.js
  Content-Type: application/javascript; charset=utf-8

/*.json
  Content-Type: application/json; charset=utf-8
'@

    $headersContent | Out-File -FilePath "public\_headers" -Encoding UTF8
    Write-Success "–°–æ–∑–¥–∞–Ω public\_headers"

    # 4. –°–æ–∑–¥–∞–µ–º backup –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ SupabaseDebug.tsx
    Write-Info "üíæ –°–æ–∑–¥–∞–µ–º backup..."
    if (Test-Path "src\pages\SupabaseDebug.tsx") {
        $timestamp = Get-Date -Format "yyyyMMdd_HHmmss"
        Copy-Item "src\pages\SupabaseDebug.tsx" "src\pages\SupabaseDebug.tsx.backup-$timestamp" -Force
        Write-Success "Backup: SupabaseDebug.tsx.backup-$timestamp"
    }

    # 5. –°–æ–∑–¥–∞–µ–º README —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
    Write-Info "üìö –°–æ–∑–¥–∞–µ–º README..."
    
    $readmeContent = @'
# üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ MIME type - –ó–∞–≤–µ—Ä—à–µ–Ω–æ!

## ‚úÖ –ß—Ç–æ –±—ã–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:

1. **–°–æ–∑–¥–∞–Ω SQL —Ñ–∞–π–ª** `public/supabase/artifact_unified.sql`
2. **–ù–∞—Å—Ç—Ä–æ–µ–Ω—ã MIME types** —á–µ—Ä–µ–∑ `public/_headers`
3. **–û–±–Ω–æ–≤–ª–µ–Ω SupabaseDebug.tsx** –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ SQL
4. **–°–æ–∑–¥–∞–Ω backup** –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞

## üöÄ –ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å:

### –†–∞–Ω—å—à–µ (–ø—Ä–æ–±–ª–µ–º–∞):
- SupabaseDebug –ø—ã—Ç–∞–ª—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å `/supabase/artifact_unified.sql`
- –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª ‚Üí Cloudflare –≤–æ–∑–≤—Ä–∞—â–∞–ª HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É
- –ë—Ä–∞—É–∑–µ—Ä –ø–æ–ª—É—á–∞–ª HTML –≤–º–µ—Å—Ç–æ SQL ‚Üí –æ—à–∏–±–∫–∞ MIME type

### –¢–µ–ø–µ—Ä—å (—Ä–µ—à–µ–Ω–∏–µ):
- SQL –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –≤—Å—Ç—Ä–æ–µ–Ω –ø—Ä—è–º–æ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
- –°–æ–∑–¥–∞–Ω —Ñ–∏–∑–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä—è–º—ã—Ö —Å—Å—ã–ª–æ–∫
- –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ MIME types –¥–ª—è Cloudflare

## üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç:

- ‚ùå –û—à–∏–±–∫–∏ MIME type –∏—Å—á–µ–∑–ª–∏
- ‚úÖ –ö–Ω–æ–ø–∫–∞ "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å SQL" —Ä–∞–±–æ—Ç–∞–µ—Ç
- ‚úÖ –ü—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ .sql —Ñ–∞–π–ª—ã —Ä–∞–±–æ—Ç–∞—é—Ç
- ‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ SupabaseDebug –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã

## üîÑ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:

1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ dev —Å–µ—Ä–≤–µ—Ä: `npm run dev`
2. –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É /#/dev
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –æ—à–∏–±–∫–∏ MIME type –∏—Å—á–µ–∑–ª–∏
4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å SQL"

## üìÅ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:

- `public/supabase/artifact_unified.sql` - SQL —Å—Ö–µ–º–∞
- `public/_headers` - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ MIME types –¥–ª—è Cloudflare
- `src/pages/SupabaseDebug.tsx.backup-*` - backup –æ—Ä–∏–≥–∏–Ω–∞–ª–∞

---

üéâ **–ü—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞! –ù–∏–∫–∞–∫–∏—Ö –±–æ–ª—å—à–µ –æ—à–∏–±–æ–∫ MIME type.**
'@

    $readmeContent | Out-File -FilePath "SUPABASE_FIX_README.md" -Encoding UTF8
    Write-Success "–°–æ–∑–¥–∞–Ω SUPABASE_FIX_README.md"

    # –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    Write-Host ""
    Write-Success "üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
    Write-Host ""
    Write-Host "üìä –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:" -ForegroundColor Blue
    Write-Host "  ‚úÖ –°–æ–∑–¥–∞–Ω SQL –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –≤ public/supabase/" -ForegroundColor Green
    Write-Host "  ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã MIME types —á–µ—Ä–µ–∑ _headers" -ForegroundColor Green  
    Write-Host "  ‚úÖ –°–æ–∑–¥–∞–Ω backup –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞" -ForegroundColor Green
    Write-Host "  ‚úÖ –°–æ–∑–¥–∞–Ω README —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏" -ForegroundColor Green
    Write-Host ""
    Write-Host "üîÑ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Yellow
    Write-Host "  1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ dev —Å–µ—Ä–≤–µ—Ä: npm run dev" -ForegroundColor Gray
    Write-Host "  2. –û—Ç–∫—Ä–æ–π—Ç–µ /#/dev –≤ –±—Ä–∞—É–∑–µ—Ä–µ" -ForegroundColor Gray
    Write-Host "  3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –æ—à–∏–±–∫–∏ MIME type –∏—Å—á–µ–∑–ª–∏" -ForegroundColor Gray
    Write-Host ""
    Write-Host "üéØ –ì–æ—Ç–æ–≤–æ! –û—à–∏–±–∫–∏ MIME type –¥–æ–ª–∂–Ω—ã –∏—Å—á–µ–∑–Ω—É—Ç—å." -ForegroundColor Green

} catch {
    Write-Error "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: $($_.Exception.Message)"
    Write-Host "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ backup —Ñ–∞–π–ª—ã –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ." -ForegroundColor Yellow
    exit 1
}